<%- copyright %>

#include "PlayFabCommonUtils.h"

using namespace PlayFabCommon;

FString PlayFabCommonUtils::GetTempDir()
{
    // Unix
    FString tempDir = FPlatformMisc::GetEnvironmentVariable(TEXT("TEMPDIR"));
    if (tempDir.IsEmpty())
    {
        // Windows - Alternative 1
        tempDir = FPlatformMisc::GetEnvironmentVariable(TEXT("TEMP"));
    }
    if (tempDir.IsEmpty())
    {
        // Windows - Alternative 2
        tempDir = FPlatformMisc::GetEnvironmentVariable(TEXT("TMP"));
    }
    return tempDir;
}

FString PlayFabCommonUtils::GetLocalSettingsFileContent()
{
    FString tempDirPath = PlayFabCommonUtils::GetTempDir();
    FString localSettingsFilePath = FPaths::Combine(tempDirPath, TEXT("playfab.local.settings.json"));
    FString localSettingsFileContent = "";
    return FFileHelper::LoadFileToString(localSettingsFileContent, *localSettingsFilePath)
        ? localSettingsFileContent
        : FString();
}

TSharedPtr<FJsonObject> PlayFabCommonUtils::GetLocalSettingsFileJson()
{
    FString fileContent = PlayFabCommonUtils::GetLocalSettingsFileContent();
    TSharedPtr<FJsonObject> JsonObject = MakeShareable(new FJsonObject());
    TSharedRef<TJsonReader<>> JsonReader = TJsonReaderFactory<>::Create(fileContent);
    return (FJsonSerializer::Deserialize(JsonReader, JsonObject) && JsonObject.IsValid())
        ? JsonObject
        : MakeShareable(new FJsonObject);
}

FString PlayFabCommonUtils::GetLocalSettingsFileProperty(const FString& propertyKey)
{
    TSharedPtr<FJsonObject> jsonObject = PlayFabCommonUtils::GetLocalSettingsFileJson();
    FString outString;
    return jsonObject->TryGetStringField(propertyKey, outString) ? outString : FString();
}

TArray<FString> PlayFabCommonUtils::GetLocalSettingsFileArrayProperty(const FString& propertyKey)
{
    TSharedPtr<FJsonObject> jsonObject = PlayFabCommonUtils::GetLocalSettingsFileJson();
    TArray<FString> jsonArray;
    return jsonObject->TryGetStringArrayField(propertyKey, jsonArray) ? jsonArray : TArray<FString>();
}