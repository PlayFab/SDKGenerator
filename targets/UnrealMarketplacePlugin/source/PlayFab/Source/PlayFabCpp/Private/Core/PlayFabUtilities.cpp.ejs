<%- copyright %>

#include "PlayFabUtilities.h"
#include "Json.h"

using namespace PlayFab;

FString PlayFab::PlayFabUtilities::GetLocalSettingsFileContent()
{
    FString tempDirPath = PlayFabUtilities::GetTempDir();
    FString localSettingsFilePath = FPaths::Combine(tempDirPath, TEXT("playfab.local.settings.json"));
    FString localSettingsFileContent = "";
    if (FFileHelper::LoadFileToString(localSettingsFileContent, *localSettingsFilePath))
    {
        return localSettingsFileContent;
    }
    else
    {
        return FString(TEXT(""));
    }
}

FString PlayFab::PlayFabUtilities::GetLocalSettingsFileProperty(const FString& propertyKey)
{
    FString fileContent = PlayFabUtilities::GetLocalSettingsFileContent();
    TSharedPtr<FJsonObject> JsonObject = MakeShareable(new FJsonObject());
    TSharedRef<TJsonReader<>> JsonReader = TJsonReaderFactory<>::Create(fileContent);

    if (FJsonSerializer::Deserialize(JsonReader, JsonObject) && JsonObject.IsValid())
    {
        FString outString;
        return JsonObject->TryGetStringField(propertyKey, outString) ? outString : FString();
    }
    return FString();
}

FString PlayFab::PlayFabUtilities::GetTempDir()
{
    FString tempDir = FPlatformMisc::GetEnvironmentVariable(TEXT("TEMPDIR"));
    if (tempDir.IsEmpty())
    {
        tempDir = FPlatformMisc::GetEnvironmentVariable(TEXT("TEMP"));
    }
    if (tempDir.IsEmpty())
    {
        tempDir = FPlatformMisc::GetEnvironmentVariable(TEXT("TMP"));
    }
    return tempDir;
}