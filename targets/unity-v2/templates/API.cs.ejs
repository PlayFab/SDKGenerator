#if <%- getApiDefineFlag(api) %>
using System;
using System.Collections.Generic;
using PlayFab.SharedModels;
using PlayFab.<%- api.name %>Models;
using PlayFab.Internal;
using PlayFab.Json;
using PlayFab.Public;

namespace PlayFab
{
<%- generateApiSummary("    ", api, "description")
%>    public static class PlayFab<%- api.name %>API
    {
        static PlayFab<%- api.name %>API() {}
<% if(api.name == "Client") { %>
        /// <summary>
        /// Check to See if the client is logged in.
        /// </summary>
        public static bool IsClientLoggedIn()
        {
            return PlayFabHttp.IsClientLoggedIn();
        }
<% } %>
        /// <summary>
        /// Clear the Client SessionToken which allows this Client to call API calls requiring login.
        /// A new/fresh login will be required after calling this.
        /// </summary>
        public static void ForgetAllCredentials()
        {
            PlayFabHttp.ForgetAllCredentials();
        }

<% for(var i in api.calls) { var apiCall = api.calls[i]; %><%- generateApiSummary("        ", apiCall, "summary") %><%- getDeprecationAttribute("        ", apiCall)
%>        public static void <%- apiCall.name %>(<%- apiCall.request %> request, Action<<%- apiCall.result %>> resultCallback, Action<PlayFabError> errorCallback, object customData = null, Dictionary<string, string> extraHeaders = null)
        {
<%- getRequestActions("            ", apiCall) %>
            PlayFabHttp.MakeApiCall("<%- apiCall.url %>", request, <%- getAuthParams(apiCall) %>, resultCallback, errorCallback, customData, extraHeaders);
        }<%- getCustomApiFunction("        ", apiCall) %>

<% } %>
#if UNITY_5_3 || UNITY_5_3_OR_NEWER
<% for(var i in api.calls) { var apiCall = api.calls[i]; %><%- generateApiSummary("        ", apiCall, "summary") %><%- getDeprecationAttribute("        ", apiCall)
%>        public static WaitForPlayFabResponse<<%- apiCall.result %>> <%- apiCall.name %>(<%- apiCall.request %> request)
        {
             var task = new WaitForPlayFabResponse<<%- apiCall.result %>>();

             <%- apiCall.name %>(
                 request,
                 result => task.Complete(result),
                 error => task.Complete(error)
             );

             return task;
        }

<% } %>
#endif // UNITY_5_3 || UNITY_5_3_OR_NEWER
    }
}
#endif // <%- getApiDefineFlag(api) %>
