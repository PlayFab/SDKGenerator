<% if(datatype.description) { %>
	/// <summary>
	/// <%- datatype.description %>
	/// </summary><% } %>
	public<% if(datatype.isAbstract) { %> abstract<% } %> class <%- datatype.name %><%- getBaseTypeSyntax(datatype) %>
	{<% for(var i in datatype.properties) { var property = datatype.properties[i];%><% if(property.description) { %>
		/// <summary>
		/// <%- property.description %>
		/// </summary><% } %>
        <%- getPropertyAttribs(property, datatype, api) %>public <%- getPropertyDef(property, datatype) %> { get; set;}
<% } %><% if(datatype.sortKey) { %>
        public int CompareTo(<%- datatype.name %> other)
        {
            if (other == null || other.<%- datatype.sortKey%> == null) return 1;
            if (<%- datatype.sortKey%> == null) return -1;
            return <%- datatype.sortKey%>.CompareTo(other.<%- datatype.sortKey%>);
        }
<% } %>
	}
