<%- copyright %>

// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#include "Public/PlayFabAuthenticationContext.h"

UPlayFabAuthenticationContext::UPlayFabAuthenticationContext() {}

FString& UPlayFabAuthenticationContext::GetClientSessionTicket()
{
    return clientSessionTicket;
};

void UPlayFabAuthenticationContext::SetClientSessionTicket(FString inTicket)
{
    clientSessionTicket = MoveTemp(inTicket);
};

FString& UPlayFabAuthenticationContext::GetEntityToken()
{
    return entityToken;
};

void UPlayFabAuthenticationContext::SetEntityToken(FString inToken)
{
    entityToken = MoveTemp(inToken);
};

FString& UPlayFabAuthenticationContext::GetDeveloperSecretKey()
{
#if defined(ENABLE_PLAYFABSERVER_API) && defined(ENABLE_PLAYFABADMIN_API)
#if ENABLE_PLAYFABSERVER_API && ENABLE_PLAYFABADMIN_API
    return developerSecretKey;
#endif
#endif

    checkf(false, TEXT("Cannot call GetDeveloperSecretKey in a non-developer build!"));
    return developerSecretKey;
}

void UPlayFabAuthenticationContext::SetDeveloperSecretKey(FString inKey) 
{ 
#if defined(ENABLE_PLAYFABSERVER_API) && defined(ENABLE_PLAYFABADMIN_API)
#if ENABLE_PLAYFABSERVER_API && ENABLE_PLAYFABADMIN_API
    developerSecretKey = MoveTemp(inKey);
    return;
#endif
#endif

    checkf(false, TEXT("Cannot call SetDeveloperSecretKey in a non-developer build!"));
};

void UPlayFabAuthenticationContext::ForgetAllCredentials()
{
    clientSessionTicket.Empty();
    entityToken.Empty();
    developerSecretKey.Empty();
}