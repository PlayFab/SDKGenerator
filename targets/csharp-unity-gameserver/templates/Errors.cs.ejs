using System;
using System.Collections.Generic;
using System.Net;

namespace PlayFab
{
    /// <summary>
    /// Error codes returned by PlayFabAPIs
    /// </summary>
    public enum PlayFabErrorCode
    {
        Unknown = 1,
        <% for(var i=0; i<errorList.length-1; i++) { var errorProps = errors[errorList[i]] %><%- errorProps.name %> = <%- errorProps.id %>,
        <% } %><% var errorProps = errors[errorList[errorList.length-1]] %><%- errorProps.name %> = <%- errorProps.id %>
    }

    public delegate void ErrorCallback(PlayFabError error);

    public class PlayFabError
    {
        public int HttpCode;
        public string HttpStatus;
        public PlayFabErrorCode Error;
        public string ErrorMessage;
        public Dictionary<string, List<string> > ErrorDetails;
    }

    public enum WebRequestType
    {
        UnityWww, // High compatability Unity api calls
        HttpWebRequest // High performance multi-threaded api calls
    }

    /// <summary>
    /// This is a callback class for use with HttpWebRequest.
    /// </summary>
    public class CallRequestContainer
    {
        public enum RequestState { Unstarted, RequestSent, RequestReceived, Error };

        public WebRequestType RequestType;
        public RequestState State = RequestState.Unstarted;
        public string Url;
        public int CallId;
        public string Data;
        public string AuthType;
        public string AuthKey;
        public object Request;
        public string ResultStr;
        public object CustomData;
        public HttpWebRequest HttpRequest;
        public PlayFabError Error;
        public Action<CallRequestContainer> Callback;

        public void InvokeCallback()
        {
            // It is expected that the specific callback needs to process the change before the less specific global callback
            if (Callback != null)
                Callback(this); // Do the specific callback
        }
    }
}
