// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once 

#include "Core/PlayFabError.h"
#include "Core/PlayFab<%- api.name %>DataModels.h"
#include "Core/PlayFabSettings.h"
#include "Http.h"

namespace PlayFab
{
	
    
    class PLAYFAB_API UPlayFab<%- api.name %>API
    {
    public:
		
		<% for(var i in api.calls) { var apiCall = api.calls[i]; %>DECLARE_DELEGATE_OneParam(F<%- apiCall.name %>Delegate, const <%- api.name %>Models::F<%- apiCall.result%>&);
		<% } %>

        UPlayFab<%- api.name %>API();
        ~UPlayFab<%- api.name %>API();

		<% if(api.name == "Client") { %>bool IsClientLoggedIn();<% } %>

        // ------------ Generated API calls
		<%	for(var i in api.calls)
			{ 
				var apiCall = api.calls[i]; 
				if(hasRequest(apiCall, api)) 
				{ %>
		/**
		 * <%- getApiCallSummary(apiCall, api) %>
		 */
		bool <%- apiCall.name %>(<%- api.name %>Models::F<%- apiCall.request %>& request, const F<%- apiCall.name %>Delegate& SuccessDelegate = F<%- apiCall.name %>Delegate(), const FPlayFabErrorDelegate& ErrorDelegate = FPlayFabErrorDelegate());

			<%	} else 
			{%>
		/**
		 * <%- getApiCallSummary(apiCall, api) %>
		 */
		bool <%- apiCall.name %>(const F<%- apiCall.name %>Delegate& SuccessDelegate = F<%- apiCall.name %>Delegate(), const FPlayFabErrorDelegate& ErrorDelegate = FPlayFabErrorDelegate());
		<% } } %>

    private:

        // ------------ Generated result handlers
		<% for(var i in api.calls) { var apiCall = api.calls[i]; 
		%>void On<%- apiCall.name %>Result(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, F<%- apiCall.name %>Delegate SuccessDelegate, FPlayFabErrorDelegate ErrorDelegate);
		<% } %>
		
		<% if(authKey) { %>
        FString mUserSessionTicket;
		<% } %>
    };

};

