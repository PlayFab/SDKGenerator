<%- copyright %>

// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#include "Public/PlayFabAuthenticationContext.h"

UPlayFabAuthenticationContext::UPlayFabAuthenticationContext() {}

FString& UPlayFabAuthenticationContext::GetClientSessionTicket()
{
    return ClientSessionTicket;
};

void UPlayFabAuthenticationContext::SetClientSessionTicket(FString InTicket)
{
    ClientSessionTicket = MoveTemp(InTicket);
};

FString& UPlayFabAuthenticationContext::GetEntityToken()
{
    return EntityToken;
};

void UPlayFabAuthenticationContext::SetEntityToken(FString InToken)
{
    EntityToken = MoveTemp(InToken);
};

FString& UPlayFabAuthenticationContext::GetDeveloperSecretKey()
{
#if defined(ENABLE_PLAYFABSERVER_API) && defined(ENABLE_PLAYFABADMIN_API)
#if ENABLE_PLAYFABSERVER_API && ENABLE_PLAYFABADMIN_API
    return DeveloperSecretKey;
#endif
#endif

    checkf(false, TEXT("Cannot call GetDeveloperSecretKey in a non-developer build!"));
    return DeveloperSecretKey;
}

void UPlayFabAuthenticationContext::SetDeveloperSecretKey(FString InKey) 
{ 
#if defined(ENABLE_PLAYFABSERVER_API) && defined(ENABLE_PLAYFABADMIN_API)
#if ENABLE_PLAYFABSERVER_API && ENABLE_PLAYFABADMIN_API
    DeveloperSecretKey = MoveTemp(InKey);
    return;
#endif
#endif

    checkf(false, TEXT("Cannot call SetDeveloperSecretKey in a non-developer build!"));
};

void UPlayFabAuthenticationContext::ForgetAllCredentials()
{
    ClientSessionTicket.Empty();
    EntityToken.Empty();
    DeveloperSecretKey.Empty();
}