#pragma once

#include "PlayFabError.h"
#include "PlayFabHttp.h"
#include "IPlayFab<%- api.name %>Api.h"
#include "PlayFab<%- api.name %>DataModels.h"

namespace PlayFab
{
    class PlayFab<%- api.name %>Api
    {
    public:<% if(hasClientOptions) { %>
        // Public, Client-Specific
        static bool IsClientLoggedIn();

<% } %>        // ------------ Generated Api calls
<% for(var i in api.calls) { var apiCall = api.calls[i]; if(hasRequest(apiCall, api)) {
%>        static void <%- apiCall.name %>(<%- api.name %>Models::<%- apiCall.request %>& request, ProcessApiCallback<<%- api.name %>Models::<%- apiCall.result%>> callback = nullptr, ErrorCallback errorCallback = nullptr, void* customData = nullptr);
<% } else
{%>        static void <%- apiCall.name %>(ProcessApiCallback<<%- api.name %>Models::<%- apiCall.result%>> callback = nullptr, ErrorCallback errorCallback = nullptr, void* customData = nullptr);
<% } } %>
    private:
        // ------------ Private constructor, to enforce all-static class
        PlayFab<%- api.name %>Api();

        // ------------ Generated result handlers
<% for(var i in api.calls) { var apiCall = api.calls[i];
%>        static void On<%- apiCall.name %>Result(PlayFabRequest* request);
<% } %><% if(hasClientOptions) { %>
        // Private, Client-Specific
        static void MultiStepClientLogin(bool needsAttribution);
        static Aws::String mUserSessionTicket;
<% } %>    };
};
