// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once

#include "CoreMinimal.h"
#include "Core/PlayFab<%- api.name %>API.h"
#include "Core/PlayFab<%- api.name %>DataModels.h"
#include "PlayFab<%- api.name %>BPDataModels.generated.h"

<% for(var i in api.datatypes) { var datatype = api.datatypes[i]; if(datatype.isenum) { %>
UENUM(BlueprintType)
enum class EBP<%- api.name %><%- datatype.name %> : uint8
{
<% for(var i=0; i<datatype.enumvalues.length-1; i++) { var enumval = datatype.enumvalues[i]
%>	<%- datatype.name %>_<%- enumval.name %> UMETA(DisplayName = "<%- enumval.name %>"),
<% } %>	<%- datatype.name %>_<%- datatype.enumvalues[datatype.enumvalues.length-1].name %> UMETA(DisplayName = "<%- datatype.enumvalues[datatype.enumvalues.length-1].name %>")
};
<% } else { %>
<% if (!IsResult(datatype.name)&&!IsRequest(datatype.name)) {
%>USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PF<%- api.name %>ProxyLibrary.MakeBP<%- api.name %><%- datatype.name %>", HasNativeBreak = "PlayFabProxy.PF<%- api.name %>ProxyLibrary.BreakBP<%- api.name %><%- datatype.name %>"))<%
} else if (IsResult(datatype.name)) {
%>USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PF<%- api.name %>ProxyLibrary.BreakBP<%- api.name %><%- datatype.name %>"))<%
} else if (IsRequest(datatype.name)) {
%>USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PF<%- api.name %>ProxyLibrary.MakeBP<%- api.name %><%- datatype.name %>"))<%
}%>
struct FBP<%- api.name %><%- datatype.name %>
{
	GENERATED_BODY()
public:
	FBP<%- api.name %><%- datatype.name %>() {};
	FBP<%- api.name %><%- datatype.name %>(PlayFab::<%- api.name %>Models::F<%- datatype.name %> InData) : Data(InData) {};
	PlayFab::<%- api.name %>Models::F<%- datatype.name %> Data;
};
<%} }%>
<% for(var i in api.datatypes) { var datatype = api.datatypes[i]; if(datatype.isenum || !NeedsDelegate(datatype.name)) { continue; }
%>DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBP<%- api.name%><%- datatype.name %>Delegate, const FBP<%- api.name%><%- datatype.name %>&, Result);
<%}%>
