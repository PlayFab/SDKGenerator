

#import <Foundation/Foundation.h>

#import "PlayFab<%- api.name %>DataModels.h"
#import "PlayFabError.h"
#import "PlayFabSettings.h"

@interface PlayFab<%- api.name %>API : NSObject
<% if(authKey) { %>
@property (nonatomic) NSString* mUserSessionTicket;
<% } %>
@property (nonatomic) NSString* logicServerURL;
		<% for(var i in api.calls) { var apiCall = api.calls[i]; %>
typedef void(^<%- apiCall.name %>Callback)(<%- apiCall.result%>* result, NSObject* userData);
		<% } %>

+ (PlayFabClientAPI*) GetInstance;

		<% if(api.name == "Client") { %>+(bool) IsClientLoggedIn;<% } %>


        // ------------ Generated API calls
		<% for(var i in api.calls) { var apiCall = api.calls[i]; if(hasRequest(apiCall, api)) { %>
-(void) <%- apiCall.name %>:(<%- apiCall.request %>*)request success:(<%- apiCall.name %>Callback)callback failure:(ErrorCallback)errorCallback withUserData:(NSObject*)userData;
		<% } else {%>
-(void) <%- apiCall.name %>:(<%- apiCall.name %>Callback)callback failure:(ErrorCallback)errorCallback withUserData:(NSObject*) userData;
		<% } } %>

    //private:
/*
        // ------------ Generated result handlers
		<% for(var i in api.calls) { var apiCall = api.calls[i]; %>
+ (void) On<%- apiCall.name %>Result:(int)httpStatus withRequest:(HttpRequest*) request withUserData:(void*) userData;
		<% } %>
 */

        //@property bool mOwnsRequester;
        //@property AFHTTPClient* mHttpRequester;


@end
