// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once
#include "OnlineBlueprintCallProxyBase.h"

#include "Core/PlayFab<%- api.name %>API.h"
#include "Core/PlayFab<%- api.name %>DataModels.h"
#include "Proxy/PlayFab<%- api.name %>BPDataModels.h"
#include "PF<%- api.name %><%- apiCall.name %>.generated.h"

UCLASS()
class PLAYFABPROXY_API UPF<%- api.name %><%- apiCall.name %> : public UOnlineBlueprintCallProxyBase
{
	GENERATED_UCLASS_BODY()
public:

	UPROPERTY(BlueprintAssignable)
	<% if(hasResult(apiCall, api)) {
	%>FBP<%- api.name%><%- apiCall.result %>Delegate OnSuccess;<% 
	 } else 
	 {%>FEmptyOnlineDelegate OnSuccess; <% }%>

	UPROPERTY(BlueprintAssignable)
	<% if(hasResult(apiCall, api)) {
	%>FBP<%- api.name%><%- apiCall.result %>Delegate OnFailure;<% 
	 } else 
	 {%>FEmptyOnlineDelegate OnFailure; <% }%>
	
	// <%- apiCall.summary %>
	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject"), Category = "PlayFab|<%- api.name%>|<%- apiCall.subgroup%>")
	static UPF<%- api.name %><%- apiCall.name %>* <%- apiCall.name %>(UObject* WorldContextObject, class APlayerController* PlayerController<%- getDatatypeSignatureInputParameters(apiCall, api) %>);

	// UOnlineBlueprintCallProxyBase interface
	virtual void Activate() override;
	// End of UOnlineBlueprintCallProxyBase interface

private:

	<% if(hasRequest(apiCall, api)) { %>PlayFab::<%- api.name %>Models::F<%- apiCall.request %> Request;<% } %>

	PlayFab::UPlayFab<%- api.name %>API::F<%- apiCall.name %>Delegate	SuccessDelegate;
	PlayFab::FPlayFabErrorDelegate							ErrorDelegate;

	void OnSuccessCallback(const PlayFab::<%- api.name %>Models::F<%- apiCall.result %>& Result);
	void OnErrorCallback(const PlayFab::FPlayFabError& Error);
};
